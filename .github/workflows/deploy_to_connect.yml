on:
  push:
    branches:
      - main

name: deploy-to-connect

jobs:
  deploy-to-connect:
    runs-on: ubuntu-latest
    env:
      APP_NAME: "demo-palmers-penguins-shiny-github-actions-deploy-2"
      APP_DIR: "app"
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      RSCONNECT_APIKEY: ${{ secrets.RSCONNECT_APIKEY }}
    steps:
      - uses: actions/checkout@v2
    
      # Caching 
      - name: Set RENV_PATHS_ROOT
        shell: bash
        run: |
          echo "RENV_PATHS_ROOT=${{ runner.temp }}/renv" >> $GITHUB_ENV
      
      - name: Install and activate renv
        run: |
          install.packages("renv")
          renv::activate()
        shell: Rscript {0}
      
      - name: Get R and OS version
        id: get-version
        run: |
          cat("##[set-output name=os-version;]", sessionInfo()$running, "\n", sep = "")
          cat("##[set-output name=r-version;]", R.Version()$version.string, sep = "")
        shell: Rscript {0}
      
      - name: Restore Renv package cache
        uses: actions/cache@v3
        with:
          path: ${{ env.RENV_PATHS_ROOT }}
          key: ${{ steps.get-version.outputs.os-version }}-${{ steps.get-version.outputs.r-version }}-${{ inputs.cache-version }}-${{ hashFiles('renv.lock') }}
          restore-keys: ${{ steps.get-version.outputs.os-version }}-${{ steps.get-version.outputs.r-version }}-${{inputs.cache-version }}-

      - uses: r-lib/actions/setup-r@master

      - name: Install renv
        run: |
          install.packages("renv")
        shell: Rscript {0}
        
      - name: Restore environment
        run: |
          renv::consent(TRUE)
          renv::restore()
        shell: Rscript {0}

      - name: Generate manifest.json
        run: |
          rsconnect::writeManifest(appDir = "${{ env.APP_DIR }}")
        shell: Rscript {0}
        
      - name: Register server
        run: |
          rsconnect::addConnectServer(url = "https://colorado.rstudio.com/rsc", name = "colorado.rstudio.com")
        shell: Rscript {0}
        
      - name: Register user
        run: |
          rsconnect::connectApiUser(server = "colorado.rstudio.com", apiKey="{{ env.RSCONNECT_APIKEY }}")
        shell: Rscript {0}
        
      - name: Deploy
        run: |
          rsconnect::deployApp(addDir = "app", appFiles = c("app.R"), appName = "demo-palmers-penguins-shiny-github-actions-deploy", appTitle = "Demo - Palmers Penguins [Shiny / GitHub Actions Deploy]", forceUpdate = TRUE)
        shell: Rscript {0}